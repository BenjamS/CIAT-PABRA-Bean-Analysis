library(tidyverse)
library(circlize)

df_raw <- read.csv("SA_TradeFlowQuantity.csv", stringsAsFactors = F)
colnames(df_raw)

df <- subset(df_raw, product == "Dry Beans (Mixed)" &
               flow_type == "Export")
df <- df[, c("reporting_country", "partner_country", "period_date", "value")]
#unique(df$reporting_country)
colnames(df)[2] <- "Destination"
colnames(df)[4] <- "Bean Exports (kg.)"
date_vec <- df$period_date
df$month <- lubridate::month(as.POSIXlt(date_vec, format="%m/%d/%Y"))
df$Year <- lubridate::year(as.POSIXlt(date_vec, format="%m/%d/%Y"))
df$Year <- as.integer(df$Year)
u <- df$reporting_country
df$reporting_country[grep("Congo", u)] <- "DRC"
df$reporting_country[grep("Tanzania", u)] <- "Tanzania"
u <- df$Destination
df$Destination[grep("Congo", u)] <- "DRC"
df$Destination[grep("Tanzania", u)] <- "Tanzania"
#===========================================================================
df_circle <- df %>% group_by(reporting_country, Destination, Year) %>%
  summarise(`Bean Exports (kg.)` = sum(`Bean Exports (kg.)`, na.rm = T))
df_circle <- subset(df_circle, Year == 2015)
df_circle$Year <- NULL

png("my_plot.png") 
chordDiagram(df_circle, directional = 1, direction.type = c("diffHeight", "arrows"),
             link.arr.col = arr.col, link.arr.length = 0.2)
title(main = "2015 Southern Africa Bean Trade Flows (FEWS data)")
dev.off()
#===========================================================================
df_kgPerMonth <- subset(df, Year >= 2010)
#df_kgPerMonth <- df
df_kgPerMonth <- df_kgPerMonth %>% group_by(reporting_country, month) %>%
  summarise(`Avg. Bean Exports (kg.)` = mean(`Bean Exports (kg.)`, na.rm = T),
            sd = sd(`Bean Exports (kg.)`, na.rm = T))
mymonths <- c("Jan","Feb","Mar",
              "Apr","May","Jun",
              "Jul","Aug","Sep",
              "Oct","Nov","Dec")
df_kgPerMonth$month <- as.numeric(df_kgPerMonth$month)
df_kgPerMonth$Month <- mymonths[df_kgPerMonth$month]
colnames(df_kgPerMonth)[3] <- "Avg. Bean Exports (kg.) 2010-2015"
df_plot <- df_kgPerMonth
df_plot$Month <- factor(df_plot$Month, levels = unique(df_plot$Month))
df_plot <- df_plot %>% group_by(reporting_country) %>%
  mutate(mu = mean(`Avg. Bean Exports (kg.) 2010-2015`, na.rm = T)) %>%
  as.data.frame()
df_plot <- df_plot[order(df_plot$mu),]
df_plot$reporting_country <- factor(df_plot$reporting_country,
                                    levels = unique(df_plot$reporting_country))


gg <- ggplot(df_plot, aes(x = Month, y = `Avg. Bean Exports (kg.) 2010-2015`, fill = reporting_country))
gg <- gg + geom_bar(stat = "identity", width = 0.7,
                    position = position_dodge(),
                    color = "black")
gg <- gg + geom_errorbar(aes(ymin=`Avg. Bean Exports (kg.) 2010-2015`-sd,
                             ymax=`Avg. Bean Exports (kg.) 2010-2015`+sd),
                         width=.5, position=position_dodge(.7)) 
gg <- gg + labs(caption = "Source: FEWS")
gg <- gg + theme(axis.title.x = element_blank(),
                 legend.title = element_blank(),
                 legend.position = "top")
gg
ggsave("Avg monthly exports.png")
#===========================================================================
df_evolut <- df#subset(df, reporting_country != "South Africa")
df_evolut <- df_evolut %>% group_by(reporting_country, Destination, Year) %>%
  summarise(`Bean Exports (kg.)` = sum(`Bean Exports (kg.)`, na.rm = T))
df_plot <- df_evolut
n <- length(unique(df_plot$Destination))
bag_of_colors <- randomcoloR::distinctColorPalette(k = 2 * n)
these_colors <- sample(bag_of_colors, n)
gg <- ggplot(df_plot, aes(x = Year, y = `Bean Exports (kg.)`, fill = Destination))
gg <- gg + geom_area(position = "stack")
gg <- gg + scale_fill_manual(values = these_colors)
gg <- gg + scale_x_continuous(breaks = seq(2005, 2015, length.out = 6))
gg <- gg + facet_wrap(~reporting_country, ncol = 2, scales = "free_y")
gg <- gg + labs(caption = "Source: FEWS")
gg <- gg + theme(axis.title.x = element_blank(),
                 legend.position = "top")
gg
ggsave("Trade evolution.png", height = 5)
#===========================================================================
