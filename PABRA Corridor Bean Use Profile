library(tidyverse)
#=======================================================================
shift_legend2 <- function(p) {
  # ...
  # to grob
  gp <- ggplotGrob(p)
  facet.panels <- grep("^panel", gp[["layout"]][["name"]])
  empty.facet.panels <- sapply(facet.panels, function(i) "zeroGrob" %in% class(gp[["grobs"]][[i]]))
  empty.facet.panels <- facet.panels[empty.facet.panels]
  
  # establish name of empty panels
  empty.facet.panels <- gp[["layout"]][empty.facet.panels, ]
  names <- empty.facet.panels$name
  # example of names:
  #[1] "panel-3-2" "panel-3-3"
  
  # now we just need a simple call to reposition the legend
  #lemon::reposition_legend(p, 'center', panel=names)
  p_out <- lemon::reposition_legend(p, 'center', panel=names)
  #class(lemon::reposition_legend(p, 'center', panel=names))
  return(p_out)
}
#=======================================================================
FAOdat_createRegionGroups <- function(df_raw, exclude_these, keep_FAOregions = F,
                                      df_is_trade_matrix = F,
                                      consolidate_LAC = T,
                                      consolidate_WEur = T,
                                      consolidate_AusNZPacIslands = T,
                                      consolidate_SSA = T,
                                      output_countryVecs = F)
{
  #=================================
  #--Africa
  countries_NAfrica <- as.character(unique(read.csv("Country list - Northern Africa.csv")[,"Area"]))
  countries_MAfrica <- as.character(unique(read.csv("Country list - Middle Africa.csv")[,"Area"]))
  countries_WAfrica <- as.character(unique(read.csv("Country list - Western Africa.csv")[,"Area"]))
  countries_EAfrica <- as.character(unique(read.csv("Country list - Eastern Africa.csv")[,"Area"]))
  countries_SAfrica <- as.character(unique(read.csv("Country list - Southern Africa.csv")[,"Area"]))
  #--Americas
  countries_SAmer <- as.character(unique(read.csv("Country list - South America.csv")[,"Area"]))
  countries_CAmer <- as.character(unique(read.csv("Country list - Central America.csv")[,"Area"]))
  countries_Carib <- as.character(unique(read.csv("Country list - Caribbean.csv")[,"Area"]))
  countries_NAmer <- as.character(unique(read.csv("Country list - Northern America.csv")[,"Country"]))
  #--Asia
  countries_EAsia <- as.character(unique(read.csv("Country list - Eastern Asia.csv")[,"Area"]))
  #countries_EAsia <- countries_EAsia[!(countries_EAsia %in% c("China, Hong Kong SAR", "China, Macao SAR"))]
  countries_SEAsia <- as.character(unique(read.csv("Country list - South-Eastern Asia.csv")[,"Area"]))
  countries_SAsia <- as.character(unique(read.csv("Country list - Southern Asia.csv")[,"Area"]))
  countries_WAsia <- as.character(unique(read.csv("Country list - Western Asia.csv")[,"Area"]))
  countries_CAsia <- as.character(unique(read.csv("Country list - Central Asia.csv")[,"Area"]))
  #--Europe
  countries_NEurope <- as.character(unique(read.csv("Country list - Northern Europe.csv")[,"Area"]))
  countries_WEurope <- as.character(unique(read.csv("Country list - Western Europe.csv")[,"Area"]))
  countries_EEurope <- as.character(unique(read.csv("Country list - Eastern Europe.csv")[,"Area"]))
  countries_SEurope <- as.character(unique(read.csv("Country list - Southern Europe.csv")[,"Area"]))
  #--Oceania
  countries_Oceania <- as.character(unique(read.csv("Country list - Oceania.csv")[,"Area"]))
  countries_AusNZea <- c("Australia", "New Zealand")
  countries_PacifIs <- setdiff(countries_Oceania, countries_AusNZea)
  #=================================
  #--Create region groupings
  if(df_is_trade_matrix){
    u <- df_raw$Partner.Countries
  }else{
    u <- df_raw$Area
  }
  df_raw$Region <- NA
  df_raw$Region[which(u %in% countries_NAmer)] <- "North America"
  df_raw$Region[which(u %in% countries_SAmer)] <- "South America"
  df_raw$Region[which(u %in% countries_CAmer)] <- "Central America"
  df_raw$Region[which(u %in% countries_Carib)] <- "Caribbean"
  df_raw$Region[which(u %in% countries_NAfrica)] <- "Northern Africa"
  df_raw$Region[which(u %in% countries_SAfrica)] <- "Southern Africa"
  df_raw$Region[which(u %in% countries_WAfrica)] <- "Western Africa"
  df_raw$Region[which(u %in% countries_EAfrica)] <- "Eastern Africa"
  df_raw$Region[which(u %in% countries_MAfrica)] <- "Middle Africa"
  df_raw$Region[which(u %in% countries_CAsia)] <- "Central Asia"
  df_raw$Region[which(u %in% countries_WAsia)] <- "Western Asia"
  df_raw$Region[which(u %in% countries_SAsia)] <- "Southern Asia"
  df_raw$Region[which(u %in% countries_EAsia)] <- "Eastern Asia"
  df_raw$Region[which(u %in% countries_SEAsia)] <- "South-Eastern Asia"
  df_raw$Region[which(u %in% countries_NEurope)] <- "Northern Europe"
  df_raw$Region[which(u %in% countries_SEurope)] <- "Southern Europe"
  df_raw$Region[which(u %in% countries_WEurope)] <- "Western Europe"
  df_raw$Region[which(u %in% countries_EEurope)] <- "Eastern Europe"
  df_raw$Region[which(u %in% countries_PacifIs)] <- "Pacific Islands"
  df_raw$Region[which(u %in% countries_AusNZea)] <- "Australia & New Zealand"
  rm(u)
  #--------------------
  #--See what countries escaped designation
  #unique(df_raw$Area[which(is.na(df_raw$Region))])
  #--Assign these to their proper regions
  #(Leave out "China" as it is already covered under "China, mainlaind", "Hong Kong", etc.)
  if(df_is_trade_matrix){
    u <- df_raw$Partner.Countries
  }else{
    u <- df_raw$Area
  }
  df_raw$Region[which(u %in% c("Åland Islands", "Isle of Man", "Greenland"))] <- "Northern Europe"
  df_raw$Region[which(u %in% c("Anguilla", "Bermuda", "Cayman Islands", "Curaçao"))] <- "Caribbean"
  df_raw$Region[which(u %in% c("Côte d'Ivoire"))] <- "Western Africa"
  df_raw$Region[which(u %in% c("Palau"))] <- "Pacific Islands"
  df_raw$Region[which(u %in% c("Maldives", "Réunion"))] <- "Southern Asia"
  df_raw$Region[which(u %in% c("French Guiana"))] <- "South America"
  rm(u)
  #===========================
  #unique(df_raw$Area[which(is.na(df_raw$Region) == T)])
  if(!(df_is_trade_matrix)){
    ind_NA <- which(is.na(df_raw$Region) == T)
    ind_noNA <- which(is.na(df_raw$Region) == F)
    if(keep_FAOregions == F){
      df_raw <- df_raw[ind_noNA,]
    }else{
      df_raw$Region[ind_NA] <- df_raw$Area[ind_NA] 
    }
  }
  #===========================
  #--
  if(df_is_trade_matrix){
    df_raw <- subset(df_raw, !(Partner.Countries %in% exclude_these))
  }else{
    df_raw <- subset(df_raw, !(Area %in% exclude_these))
  }
  #--
  if(consolidate_LAC){
    LAC <- c("Central America", "Caribbean", "South America")
    u <- df_raw$Region
    df_raw$Region[which(u %in% LAC)] <- "LAC"
    rm(u)
  }
  if(consolidate_WEur){
    Europe_WNS <- c("Southern Europe", "Western Europe", "Northern Europe")
    u <- df_raw$Region
    df_raw$Region[which(u %in% Europe_WNS)] <- "W/N/S Europe"
    rm(u)
  }
  if(consolidate_AusNZPacIslands){
    AusNZPacIslands <- c("Australia & New Zealand", "Pacific Islands")
    u <- df_raw$Region
    df_raw$Region[which(u %in% AusNZPacIslands)] <- "Aus/NZ/Oceania"
    rm(u)
  }
  if(consolidate_SSA){
    SSA <- c("Eastern Africa", "Southern Africa", "Western Africa", "Middle Africa")
    u <- df_raw$Region
    df_raw$Region[which(u %in% SSA)] <- "Sub-Saharan Africa"
    rm(u)
  }
  
  # Europe_E <- "Eastern Europe"
  # ESE_Asia <- c("South-Eastern Asia", "Eastern Asia")
  #--
  # u <- df_raw$Region
  # df_raw$Region[which(u %in% LAC)] <- "LAC"
  # df_raw$Region[which(u %in% Europe_E)] <- "E. Europe"
  # df_raw$Region[which(u %in% ESE_Asia)] <- "E. & S.E. Asia"
  # rm(u)
  #--
  if(output_countryVecs){
    out_list <- list()
    out_list[["Northern Africa"]] <- countries_NAfrica
    out_list[["Middle Africa"]] <- countries_MAfrica
    out_list[["Western Africa"]] <- countries_WAfrica
    out_list[["Eastern Africa"]] <- countries_EAfrica
    out_list[["Southern Africa"]] <- countries_SAfrica
    out_list[["df_raw"]] <- df_raw
    return(out_list)
  }else{
    return(df_raw)
  }
  
}
# regionGroups_vec <- paste0("countries_",
#                            #--Africa
#                            c("NAfrica", "MAfrica",
#                              "WAfrica", "EAfrica",
#                              "SAfrica",
#                              #--Americas
#                              "SAmer", "CAmer",
#                              "Carib", "NAmer",
#                              #--Asia
#                              "EAsia",
#                              "SEAsia", "SAsia",
#                              "WAsia", "CAsia",
#                              #--Europe
#                              "NEurope", "EEurope",
#                              "WEurope", "SEurope",
#                              #--Oceania
#                              "Oceania", "AusNZea",
#                              "PacifIs"))
# #=================================
# countries_NAfrica <- as.character(unique(read.csv("Country list - Northern Africa.csv")[,"Area"]))
# 
# ind_load <- which(exists(regionGroups_vec[4]) == F)
# 
# "Northern Africa"
# "Middle Africa"
# "Western Africa"
# "Eastern Africa"
# "Southern Africa"
# #--Americas
# "South America"
# "Central America"
#==========================================================================
#==========================================================================
df_raw_1 <- read.csv("FAO Data/FoodBalanceSheetsHistoric_E_All_Data.csv", stringsAsFactors = F)
df_raw_1 <- subset(df_raw_1, Item.Code != 2928)
df_raw_2 <- read.csv("FAO Data/FoodBalanceSheets_E_All_Data.csv", stringsAsFactors = F)
df_raw_2 <- subset(df_raw_2, Item.Code != 2928)
rm_cols <- c("Area.Code", "Item.Code", "Element.Code")
rm_cols <- which(colnames(df_raw_1) %in% rm_cols)
df_raw_1 <- df_raw_1[, -rm_cols]
df_raw_2 <- df_raw_2[, -rm_cols]
df_raw <- merge(df_raw_1, df_raw_2, by = c("Area", "Item", "Element", "Unit"))
df_raw$Item <- as.character(df_raw$Item)
df_raw$Element <- as.character(df_raw$Element)
df_raw$Area <- as.character(df_raw$Area)
u <- colnames(df_raw)
df_raw <- df_raw[, -grep("F", u)]
v <- colnames(df_raw)[5:ncol(df_raw)]
colnames(df_raw)[5:ncol(df_raw)] <- gsub("Y", "", v)
df_raw <- gather(df_raw,Year,Value,`1961`:`2017`)
#------------------------------------------------------------------------
rm(df_raw_1, df_raw_2); gc()
#------------------------------------------------------------------------
item_vec <- c("Beans", "Population")
element_vec <- c("Food", "Seed", "Feed", "Processing", "Other uses", "Losses", "Export Quantity", "Total Population - Both sexes")
df_raw <- subset(df_raw, Item %in% item_vec & Element %in% element_vec)
#------------------------------------------------------------------------
out_list <- FAOdat_createRegionGroups(df_raw, exclude_these = NULL, keep_FAOregions = F,
                                      df_is_trade_matrix = F,
                                      consolidate_LAC = T,
                                      consolidate_WEur = T,
                                      consolidate_AusNZPacIslands = T,
                                      consolidate_SSA = F,
                                      output_countryVecs = T)
df_raw <- out_list[["df_raw"]]
EAfrica_vec <- out_list[["Eastern Africa"]]
EAfrica_vec <- c(EAfrica_vec, "Mayotte")
WAfrica_vec <- out_list[["Western Africa"]]
NAfrica_vec <- out_list[["Northern Africa"]]
MAfrica_vec <- out_list[["Middle Africa"]]
SAfrica_vec <- out_list[["Southern Africa"]]
EAfrica_vec[grep("Tanzania", EAfrica_vec)] <- "Tanzania"
SAfrica_vec[grep("Eswatini", SAfrica_vec)] <- "Swaziland"
WAfrica_vec[grep("CÃ´te d'Ivoire", WAfrica_vec)] <- "Côte d'Ivoire"
SSA_vec <- c(EAfrica_vec, WAfrica_vec, SAfrica_vec, MAfrica_vec)
#------------------------------------------------------------------------
df_raw$Area[grep("Tanzania", df_raw$Area)] <- "Tanzania"
df_raw$Area[grep("Eswatini", df_raw$Area)] <- "Swaziland"
df_raw$Area[grep("CÃ´te d'Ivoire", df_raw$Area)] <- "Côte d'Ivoire"
df_raw$Region[which(df_raw$Region == "Eastern Africa")] <- "East Africa"
df_raw$Region[which(df_raw$Region == "Western Africa")] <- "West Africa"
#------------------------------------------------------------------------
df_raw <- subset(df_raw, Area %in% SSA_vec)
#------------------------------------------------------------------------
df <- df_raw %>% group_by(Region, Year, Element) %>%
  summarise(Value = sum(Value, na.rm = T)) %>% as.data.frame()
df_all <- df %>% group_by(Year, Element) %>%
  summarise(Value = sum(Value, na.rm = T)) %>% as.data.frame()
df_all$Region <- "All Sub-Saharan Africa"
df_all <- df_all[, c("Region", "Year", "Element", "Value")]
df <- rbind(df, df_all)
#------------------------------------------------------------------------
df_pop <- subset(df, Element == "Total Population - Both sexes")
df_pop <- df_pop[, c("Region", "Year", "Value")]
df_pop$Value[which(is.na(df_pop$Value))] <- 0
colnames(df_pop)[ncol(df_pop)] <- "Pop. ('000 people)"
#------------------------------------------------------------------------
df_use <- subset(df, Element != "Total Population - Both sexes")
df_use$Value[which(is.na(df_use$Value))] <- 0
colnames(df_use)[ncol(df_use)] <- "Qty. ('000 MT)"
#------------------------------------------------------------------------
df_usePcapita <- merge(df_use, df_pop, by = c("Region", "Year"))
df_usePcapita$`Quantity (kg. / capita)` <- 1000 * df_usePcapita$`Qty. ('000 MT)` / df_usePcapita$`Pop. ('000 people)`
#------------------------------------------------------------------------
df_plot <- subset(df_usePcapita, Year > 1994)
# df_plot <- df_plot %>% group_by(Element) %>% 
#   mutate(mu = mean(`Quantity (kg. / capita)`, na.rm = T)) %>%
#   as.data.frame(df_plot)
# df_plot$Element <- factor(df_plot$Element,
#                           levels = unique(df_plot$Element[order(df_plot$mu, df_plot$Element, decreasing = T)]),
#                           ordered = T)
df_plot$Year <- as.integer(df_plot$Year)
this_title <- "Sub-Saharan Africa Bean Use Profile"
gg <- ggplot(df_plot, aes(x = Year, y = `Quantity (kg. / capita)`, fill = Element))
gg <- gg + geom_area(position = "stack")
gg <- gg + facet_wrap(~Region, ncol = 3, scales = "free_y")
gg <- gg + labs(title = this_title,
                caption = "Source: FAO")
gg <- gg + theme(axis.title.x = element_blank(),
                 legend.title = element_blank(),
                 legend.position = "bottom")
gg <- gg + guides(fill = guide_legend(nrow = 3))
gg <- shift_legend2(gg)
gg <- ggplotify::as.ggplot(gg)
gg
ggsave("SSA Bean Use Profile.png", width = 8, height = 4)
#------------------------------------------------------------------------
df_useTot <- subset(df, Element != "Total Population - Both sexes")
df_useTot$Value[which(is.na(df_useTot$Value))] <- 0
df_useTot$Element <- NULL
df_useTot <- df_useTot %>% group_by(Region, Year) %>%
  summarise_all(funs(sum)) %>%
  as.data.frame(df_useTot)
df_useNormd <- merge(df_use, df_useTot, by = c("Region", "Year"))
df_useNormd$`Quantity (share of total)` <- df_useNormd$Value.x / df_useNormd$Value.y
df_useNormd$Value.x <- NULL
df_useNormd$Value.y <- NULL
#------------------------------------------------------------------------
df_plot <- subset(df_useNormd, Year > 1994)
df_plot$Year <- as.integer(df_plot$Year)
this_title <- "Sub-Saharan Africa Bean Use Profile"
gg <- ggplot(df_plot, aes(x = Year, y = `Quantity (share of total)`, fill = Element))
gg <- gg + geom_area(position = "stack")
gg <- gg + facet_wrap(~Region, ncol = 3, scales = "free_y")
gg <- gg + labs(title = this_title,
                caption = "Source: FAO")
gg <- gg + theme(axis.title.x = element_blank(),
                 legend.title = element_blank(),
                 legend.position = "bottom")
gg <- gg + guides(fill = guide_legend(nrow = 3))
gg <- shift_legend2(gg)
gg <- ggplotify::as.ggplot(gg)
gg
ggsave("SSA Bean Use Profile normalized.png", width = 8, height = 4)
